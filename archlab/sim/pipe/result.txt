Y86-64 Processor: pipe-full.hcl
809 bytes of code read

Cycle 0. CC=Z=1 S=0 O=0, Stat=AOK
F: predPC = 0x0
D: instr = nop, rA = ----, rB = ----, valC = 0x0, valP = 0x0, Stat = BUB
E: instr = nop, valC = 0x0, valA = 0x0, valB = 0x0
   srcA = ----, srcB = ----, dstE = ----, dstM = ----, Stat = BUB
M: instr = nop, Cnd = 0, valE = 0x0, valA = 0x0
   dstE = ----, dstM = ----, Stat = BUB
W: instr = nop, valE = 0x0, valM = 0x0, dstE = ----, dstM = ----, Stat = BUB
	Fetch: f_pc = 0x0, imem_instr = irmovq, f_instr = irmovq
	Execute: ALU: + 0x0 0x0 --> 0x0

Cycle 1. CC=Z=1 S=0 O=0, Stat=AOK
F: predPC = 0xa
D: instr = irmovq, rA = ----, rB = %rsp, valC = 0x338, valP = 0xa, Stat = AOK
E: instr = nop, valC = 0x0, valA = 0x0, valB = 0x0
   srcA = ----, srcB = ----, dstE = ----, dstM = ----, Stat = BUB
M: instr = nop, Cnd = 1, valE = 0x0, valA = 0x0
   dstE = ----, dstM = ----, Stat = BUB
W: instr = nop, valE = 0x0, valM = 0x0, dstE = ----, dstM = ----, Stat = BUB
	Fetch: f_pc = 0xa, imem_instr = irmovq, f_instr = irmovq
	Execute: ALU: + 0x0 0x0 --> 0x0

Cycle 2. CC=Z=1 S=0 O=0, Stat=AOK
F: predPC = 0x14
D: instr = irmovq, rA = ----, rB = %rdx, valC = 0x3, valP = 0x14, Stat = AOK
E: instr = irmovq, valC = 0x338, valA = 0x0, valB = 0x0
   srcA = ----, srcB = ----, dstE = %rsp, dstM = ----, Stat = AOK
M: instr = nop, Cnd = 1, valE = 0x0, valA = 0x0
   dstE = ----, dstM = ----, Stat = BUB
W: instr = nop, valE = 0x0, valM = 0x0, dstE = ----, dstM = ----, Stat = BUB
	Fetch: f_pc = 0x14, imem_instr = irmovq, f_instr = irmovq
	Execute: ALU: + 0x338 0x0 --> 0x338

Cycle 3. CC=Z=1 S=0 O=0, Stat=AOK
F: predPC = 0x1e
D: instr = irmovq, rA = ----, rB = %rsi, valC = 0x298, valP = 0x1e, Stat = AOK
E: instr = irmovq, valC = 0x3, valA = 0x0, valB = 0x0
   srcA = ----, srcB = ----, dstE = %rdx, dstM = ----, Stat = AOK
M: instr = irmovq, Cnd = 1, valE = 0x338, valA = 0x0
   dstE = %rsp, dstM = ----, Stat = AOK
W: instr = nop, valE = 0x0, valM = 0x0, dstE = ----, dstM = ----, Stat = BUB
	Fetch: f_pc = 0x1e, imem_instr = irmovq, f_instr = irmovq
	Execute: ALU: + 0x3 0x0 --> 0x3

Cycle 4. CC=Z=1 S=0 O=0, Stat=AOK
F: predPC = 0x28
D: instr = irmovq, rA = ----, rB = %rdi, valC = 0x268, valP = 0x28, Stat = AOK
E: instr = irmovq, valC = 0x298, valA = 0x0, valB = 0x0
   srcA = ----, srcB = ----, dstE = %rsi, dstM = ----, Stat = AOK
M: instr = irmovq, Cnd = 1, valE = 0x3, valA = 0x0
   dstE = %rdx, dstM = ----, Stat = AOK
W: instr = irmovq, valE = 0x338, valM = 0x0, dstE = %rsp, dstM = ----, Stat = AOK
	Fetch: f_pc = 0x28, imem_instr = call, f_instr = call
	Execute: ALU: + 0x298 0x0 --> 0x298
	Writeback: Wrote 0x338 to register %rsp

Cycle 5. CC=Z=1 S=0 O=0, Stat=AOK
F: predPC = 0x3b
D: instr = call, rA = ----, rB = ----, valC = 0x3b, valP = 0x31, Stat = AOK
E: instr = irmovq, valC = 0x268, valA = 0x0, valB = 0x0
   srcA = ----, srcB = ----, dstE = %rdi, dstM = ----, Stat = AOK
M: instr = irmovq, Cnd = 1, valE = 0x298, valA = 0x0
   dstE = %rsi, dstM = ----, Stat = AOK
W: instr = irmovq, valE = 0x3, valM = 0x0, dstE = %rdx, dstM = ----, Stat = AOK
	Fetch: f_pc = 0x3b, imem_instr = xorq, f_instr = xorq
	Execute: ALU: + 0x268 0x0 --> 0x268
	Writeback: Wrote 0x3 to register %rdx

Cycle 6. CC=Z=1 S=0 O=0, Stat=AOK
F: predPC = 0x3d
D: instr = xorq, rA = %rax, rB = %rax, valC = 0x0, valP = 0x3d, Stat = AOK
E: instr = call, valC = 0x3b, valA = 0x31, valB = 0x338
   srcA = ----, srcB = %rsp, dstE = %rsp, dstM = ----, Stat = AOK
M: instr = irmovq, Cnd = 1, valE = 0x268, valA = 0x0
   dstE = %rdi, dstM = ----, Stat = AOK
W: instr = irmovq, valE = 0x298, valM = 0x0, dstE = %rsi, dstM = ----, Stat = AOK
	Fetch: f_pc = 0x3d, imem_instr = andq, f_instr = andq
	Execute: ALU: + 0xfffffffffffffff8 0x338 --> 0x330
	Writeback: Wrote 0x298 to register %rsi

Cycle 7. CC=Z=1 S=0 O=0, Stat=AOK
F: predPC = 0x3f
D: instr = andq, rA = %rdx, rB = %rdx, valC = 0x0, valP = 0x3f, Stat = AOK
E: instr = xorq, valC = 0x0, valA = 0x0, valB = 0x0
   srcA = %rax, srcB = %rax, dstE = %rax, dstM = ----, Stat = AOK
M: instr = call, Cnd = 1, valE = 0x330, valA = 0x31
   dstE = %rsp, dstM = ----, Stat = AOK
W: instr = irmovq, valE = 0x268, valM = 0x0, dstE = %rdi, dstM = ----, Stat = AOK
	Fetch: f_pc = 0x3f, imem_instr = jle, f_instr = jle
	Execute: ALU: ^ 0x0 0x0 --> 0x0
	Execute: New cc = Z=1 S=0 O=0
	Writeback: Wrote 0x268 to register %rdi
	Wrote 0x31 to address 0x330

Cycle 8. CC=Z=1 S=0 O=0, Stat=AOK
F: predPC = 0xf9
D: instr = jle, rA = ----, rB = ----, valC = 0xf9, valP = 0x48, Stat = AOK
E: instr = andq, valC = 0x0, valA = 0x3, valB = 0x3
   srcA = %rdx, srcB = %rdx, dstE = %rdx, dstM = ----, Stat = AOK
M: instr = xorq, Cnd = 1, valE = 0x0, valA = 0x0
   dstE = %rax, dstM = ----, Stat = AOK
W: instr = call, valE = 0x330, valM = 0x0, dstE = %rsp, dstM = ----, Stat = AOK
	Fetch: f_pc = 0xf9, imem_instr = ret, f_instr = ret
	Execute: ALU: & 0x3 0x3 --> 0x3
	Execute: New cc = Z=0 S=0 O=0
	Writeback: Wrote 0x330 to register %rsp

Cycle 9. CC=Z=0 S=0 O=0, Stat=AOK
F: predPC = 0xfa
D: instr = ret, rA = ----, rB = ----, valC = 0x0, valP = 0xfa, Stat = AOK
E: instr = jle, valC = 0xf9, valA = 0x48, valB = 0x0
   srcA = ----, srcB = ----, dstE = ----, dstM = ----, Stat = AOK
M: instr = andq, Cnd = 0, valE = 0x3, valA = 0x3
   dstE = %rdx, dstM = ----, Stat = AOK
W: instr = xorq, valE = 0x0, valM = 0x0, dstE = %rax, dstM = ----, Stat = AOK
	Fetch: f_pc = 0xfa, imem_instr = irmovq, f_instr = irmovq
	Execute: instr = jle, cc = Z=0 S=0 O=0, branch not taken
	Execute: ALU: + 0x0 0x0 --> 0x0
	Writeback: Wrote 0x0 to register %rax

Cycle 10. CC=Z=0 S=0 O=0, Stat=AOK
F: predPC = 0xfa
D: instr = nop, rA = ----, rB = ----, valC = 0x0, valP = 0x0, Stat = BUB
E: instr = nop, valC = 0x0, valA = 0x0, valB = 0x0
   srcA = ----, srcB = ----, dstE = ----, dstM = ----, Stat = BUB
M: instr = jle, Cnd = 0, valE = 0x0, valA = 0x48
   dstE = ----, dstM = ----, Stat = AOK
W: instr = andq, valE = 0x3, valM = 0x0, dstE = %rdx, dstM = ----, Stat = AOK
	Fetch: f_pc = 0x48, imem_instr = irmovq, f_instr = irmovq
	Execute: ALU: + 0x0 0x0 --> 0x0
	Writeback: Wrote 0x3 to register %rdx

Cycle 11. CC=Z=0 S=0 O=0, Stat=AOK
F: predPC = 0x52
D: instr = irmovq, rA = ----, rB = %r9, valC = 0x1, valP = 0x52, Stat = AOK
E: instr = nop, valC = 0x0, valA = 0x0, valB = 0x0
   srcA = ----, srcB = ----, dstE = ----, dstM = ----, Stat = BUB
M: instr = nop, Cnd = 1, valE = 0x0, valA = 0x0
   dstE = ----, dstM = ----, Stat = BUB
W: instr = jle, valE = 0x0, valM = 0x0, dstE = ----, dstM = ----, Stat = AOK
	Fetch: f_pc = 0x52, imem_instr = irmovq, f_instr = irmovq
	Execute: ALU: + 0x0 0x0 --> 0x0

Cycle 12. CC=Z=0 S=0 O=0, Stat=AOK
F: predPC = 0x5c
D: instr = irmovq, rA = ----, rB = %r11, valC = 0x8, valP = 0x5c, Stat = AOK
E: instr = irmovq, valC = 0x1, valA = 0x0, valB = 0x0
   srcA = ----, srcB = ----, dstE = %r9, dstM = ----, Stat = AOK
M: instr = nop, Cnd = 1, valE = 0x0, valA = 0x0
   dstE = ----, dstM = ----, Stat = BUB
W: instr = nop, valE = 0x0, valM = 0x0, dstE = ----, dstM = ----, Stat = BUB
	Fetch: f_pc = 0x5c, imem_instr = irmovq, f_instr = irmovq
	Execute: ALU: + 0x1 0x0 --> 0x1

Cycle 13. CC=Z=0 S=0 O=0, Stat=AOK
F: predPC = 0x66
D: instr = irmovq, rA = ----, rB = %r8, valC = 0x10, valP = 0x66, Stat = AOK
E: instr = irmovq, valC = 0x8, valA = 0x0, valB = 0x0
   srcA = ----, srcB = ----, dstE = %r11, dstM = ----, Stat = AOK
M: instr = irmovq, Cnd = 1, valE = 0x1, valA = 0x0
   dstE = %r9, dstM = ----, Stat = AOK
W: instr = nop, valE = 0x0, valM = 0x0, dstE = ----, dstM = ----, Stat = BUB
	Fetch: f_pc = 0x66, imem_instr = rrmovq, f_instr = rrmovq
	Execute: ALU: + 0x8 0x0 --> 0x8

Cycle 14. CC=Z=0 S=0 O=0, Stat=AOK
F: predPC = 0x68
D: instr = rrmovq, rA = %rdx, rB = %r12, valC = 0x0, valP = 0x68, Stat = AOK
E: instr = irmovq, valC = 0x10, valA = 0x0, valB = 0x0
   srcA = ----, srcB = ----, dstE = %r8, dstM = ----, Stat = AOK
M: instr = irmovq, Cnd = 1, valE = 0x8, valA = 0x0
   dstE = %r11, dstM = ----, Stat = AOK
W: instr = irmovq, valE = 0x1, valM = 0x0, dstE = %r9, dstM = ----, Stat = AOK
	Fetch: f_pc = 0x68, imem_instr = addq, f_instr = addq
	Execute: ALU: + 0x10 0x0 --> 0x10
	Writeback: Wrote 0x1 to register %r9

Cycle 15. CC=Z=0 S=0 O=0, Stat=AOK
F: predPC = 0x6a
D: instr = addq, rA = %rdx, rB = %r12, valC = 0x0, valP = 0x6a, Stat = AOK
E: instr = rrmovq, valC = 0x0, valA = 0x3, valB = 0x0
   srcA = %rdx, srcB = ----, dstE = %r12, dstM = ----, Stat = AOK
M: instr = irmovq, Cnd = 1, valE = 0x10, valA = 0x0
   dstE = %r8, dstM = ----, Stat = AOK
W: instr = irmovq, valE = 0x8, valM = 0x0, dstE = %r11, dstM = ----, Stat = AOK
	Fetch: f_pc = 0x6a, imem_instr = addq, f_instr = addq
	Execute: ALU: + 0x3 0x0 --> 0x3
	Writeback: Wrote 0x8 to register %r11

Cycle 16. CC=Z=0 S=0 O=0, Stat=AOK
F: predPC = 0x6c
D: instr = addq, rA = %r12, rB = %r12, valC = 0x0, valP = 0x6c, Stat = AOK
E: instr = addq, valC = 0x0, valA = 0x3, valB = 0x3
   srcA = %rdx, srcB = %r12, dstE = %r12, dstM = ----, Stat = AOK
M: instr = rrmovq, Cnd = 1, valE = 0x3, valA = 0x3
   dstE = %r12, dstM = ----, Stat = AOK
W: instr = irmovq, valE = 0x10, valM = 0x0, dstE = %r8, dstM = ----, Stat = AOK
	Fetch: f_pc = 0x6c, imem_instr = addq, f_instr = addq
	Execute: ALU: + 0x3 0x3 --> 0x6
	Execute: New cc = Z=0 S=0 O=0
	Writeback: Wrote 0x10 to register %r8

Cycle 17. CC=Z=0 S=0 O=0, Stat=AOK
F: predPC = 0x6e
D: instr = addq, rA = %r12, rB = %r12, valC = 0x0, valP = 0x6e, Stat = AOK
E: instr = addq, valC = 0x0, valA = 0x6, valB = 0x6
   srcA = %r12, srcB = %r12, dstE = %r12, dstM = ----, Stat = AOK
M: instr = addq, Cnd = 1, valE = 0x6, valA = 0x3
   dstE = %r12, dstM = ----, Stat = AOK
W: instr = rrmovq, valE = 0x3, valM = 0x0, dstE = %r12, dstM = ----, Stat = AOK
	Fetch: f_pc = 0x6e, imem_instr = rrmovq, f_instr = rrmovq
	Execute: ALU: + 0x6 0x6 --> 0xc
	Execute: New cc = Z=0 S=0 O=0
	Writeback: Wrote 0x3 to register %r12

Cycle 18. CC=Z=0 S=0 O=0, Stat=AOK
F: predPC = 0x70
D: instr = rrmovq, rA = %rdi, rB = %r13, valC = 0x0, valP = 0x70, Stat = AOK
E: instr = addq, valC = 0x0, valA = 0xc, valB = 0xc
   srcA = %r12, srcB = %r12, dstE = %r12, dstM = ----, Stat = AOK
M: instr = addq, Cnd = 1, valE = 0xc, valA = 0x6
   dstE = %r12, dstM = ----, Stat = AOK
W: instr = addq, valE = 0x6, valM = 0x0, dstE = %r12, dstM = ----, Stat = AOK
	Fetch: f_pc = 0x70, imem_instr = addq, f_instr = addq
	Execute: ALU: + 0xc 0xc --> 0x18
	Execute: New cc = Z=0 S=0 O=0
	Writeback: Wrote 0x6 to register %r12

Cycle 19. CC=Z=0 S=0 O=0, Stat=AOK
F: predPC = 0x72
D: instr = addq, rA = %r12, rB = %r13, valC = 0x0, valP = 0x72, Stat = AOK
E: instr = rrmovq, valC = 0x0, valA = 0x268, valB = 0x0
   srcA = %rdi, srcB = ----, dstE = %r13, dstM = ----, Stat = AOK
M: instr = addq, Cnd = 1, valE = 0x18, valA = 0xc
   dstE = %r12, dstM = ----, Stat = AOK
W: instr = addq, valE = 0xc, valM = 0x0, dstE = %r12, dstM = ----, Stat = AOK
	Fetch: f_pc = 0x72, imem_instr = rrmovq, f_instr = rrmovq
	Execute: ALU: + 0x268 0x0 --> 0x268
	Writeback: Wrote 0xc to register %r12

Cycle 20. CC=Z=0 S=0 O=0, Stat=AOK
F: predPC = 0x74
D: instr = rrmovq, rA = %rdi, rB = %rbx, valC = 0x0, valP = 0x74, Stat = AOK
E: instr = addq, valC = 0x0, valA = 0x18, valB = 0x268
   srcA = %r12, srcB = %r13, dstE = %r13, dstM = ----, Stat = AOK
M: instr = rrmovq, Cnd = 1, valE = 0x268, valA = 0x268
   dstE = %r13, dstM = ----, Stat = AOK
W: instr = addq, valE = 0x18, valM = 0x0, dstE = %r12, dstM = ----, Stat = AOK
	Fetch: f_pc = 0x74, imem_instr = rrmovq, f_instr = rrmovq
	Execute: ALU: + 0x18 0x268 --> 0x280
	Execute: New cc = Z=0 S=0 O=0
	Writeback: Wrote 0x18 to register %r12

Cycle 21. CC=Z=0 S=0 O=0, Stat=AOK
F: predPC = 0x76
D: instr = rrmovq, rA = %rsi, rB = %rcx, valC = 0x0, valP = 0x76, Stat = AOK
E: instr = rrmovq, valC = 0x0, valA = 0x268, valB = 0x0
   srcA = %rdi, srcB = ----, dstE = %rbx, dstM = ----, Stat = AOK
M: instr = addq, Cnd = 1, valE = 0x280, valA = 0x18
   dstE = %r13, dstM = ----, Stat = AOK
W: instr = rrmovq, valE = 0x268, valM = 0x0, dstE = %r13, dstM = ----, Stat = AOK
	Fetch: f_pc = 0x76, imem_instr = addq, f_instr = addq
	Execute: ALU: + 0x268 0x0 --> 0x268
	Writeback: Wrote 0x268 to register %r13

Cycle 22. CC=Z=0 S=0 O=0, Stat=AOK
F: predPC = 0x78
D: instr = addq, rA = %r11, rB = %rbx, valC = 0x0, valP = 0x78, Stat = AOK
E: instr = rrmovq, valC = 0x0, valA = 0x298, valB = 0x0
   srcA = %rsi, srcB = ----, dstE = %rcx, dstM = ----, Stat = AOK
M: instr = rrmovq, Cnd = 1, valE = 0x268, valA = 0x268
   dstE = %rbx, dstM = ----, Stat = AOK
W: instr = addq, valE = 0x280, valM = 0x0, dstE = %r13, dstM = ----, Stat = AOK
	Fetch: f_pc = 0x78, imem_instr = addq, f_instr = addq
	Execute: ALU: + 0x298 0x0 --> 0x298
	Writeback: Wrote 0x280 to register %r13

Cycle 23. CC=Z=0 S=0 O=0, Stat=AOK
F: predPC = 0x7a
D: instr = addq, rA = %r11, rB = %rcx, valC = 0x0, valP = 0x7a, Stat = AOK
E: instr = addq, valC = 0x0, valA = 0x8, valB = 0x268
   srcA = %r11, srcB = %rbx, dstE = %rbx, dstM = ----, Stat = AOK
M: instr = rrmovq, Cnd = 1, valE = 0x298, valA = 0x298
   dstE = %rcx, dstM = ----, Stat = AOK
W: instr = rrmovq, valE = 0x268, valM = 0x0, dstE = %rbx, dstM = ----, Stat = AOK
	Fetch: f_pc = 0x7a, imem_instr = mrmovq, f_instr = mrmovq
	Execute: ALU: + 0x8 0x268 --> 0x270
	Execute: New cc = Z=0 S=0 O=0
	Writeback: Wrote 0x268 to register %rbx

Cycle 24. CC=Z=0 S=0 O=0, Stat=AOK
F: predPC = 0x84
D: instr = mrmovq, rA = %r10, rB = %rdi, valC = 0x0, valP = 0x84, Stat = AOK
E: instr = addq, valC = 0x0, valA = 0x8, valB = 0x298
   srcA = %r11, srcB = %rcx, dstE = %rcx, dstM = ----, Stat = AOK
M: instr = addq, Cnd = 1, valE = 0x270, valA = 0x8
   dstE = %rbx, dstM = ----, Stat = AOK
W: instr = rrmovq, valE = 0x298, valM = 0x0, dstE = %rcx, dstM = ----, Stat = AOK
	Fetch: f_pc = 0x84, imem_instr = rmmovq, f_instr = rmmovq
	Execute: ALU: + 0x8 0x298 --> 0x2a0
	Execute: New cc = Z=0 S=0 O=0
	Writeback: Wrote 0x298 to register %rcx

Cycle 25. CC=Z=0 S=0 O=0, Stat=AOK
F: predPC = 0x8e
D: instr = rmmovq, rA = %r10, rB = %rsi, valC = 0x0, valP = 0x8e, Stat = AOK
E: instr = mrmovq, valC = 0x0, valA = 0x0, valB = 0x268
   srcA = ----, srcB = %rdi, dstE = ----, dstM = %r10, Stat = AOK
M: instr = addq, Cnd = 1, valE = 0x2a0, valA = 0x8
   dstE = %rcx, dstM = ----, Stat = AOK
W: instr = addq, valE = 0x270, valM = 0x0, dstE = %rbx, dstM = ----, Stat = AOK
	Fetch: f_pc = 0x8e, imem_instr = mrmovq, f_instr = mrmovq
	Execute: ALU: + 0x0 0x268 --> 0x268
	Writeback: Wrote 0x270 to register %rbx

Cycle 26. CC=Z=0 S=0 O=0, Stat=AOK
F: predPC = 0x8e
D: instr = rmmovq, rA = %r10, rB = %rsi, valC = 0x0, valP = 0x8e, Stat = AOK
E: instr = nop, valC = 0x0, valA = 0x0, valB = 0x0
   srcA = ----, srcB = ----, dstE = ----, dstM = ----, Stat = BUB
M: instr = mrmovq, Cnd = 1, valE = 0x268, valA = 0x0
   dstE = ----, dstM = %r10, Stat = AOK
W: instr = addq, valE = 0x2a0, valM = 0x0, dstE = %rcx, dstM = ----, Stat = AOK
	Fetch: f_pc = 0x8e, imem_instr = mrmovq, f_instr = mrmovq
	Memory: Read 0x1 from 0x268
	Execute: ALU: + 0x0 0x0 --> 0x0
	Writeback: Wrote 0x2a0 to register %rcx

Cycle 27. CC=Z=0 S=0 O=0, Stat=AOK
F: predPC = 0x98
D: instr = mrmovq, rA = %r12, rB = %rbx, valC = 0x0, valP = 0x98, Stat = AOK
E: instr = rmmovq, valC = 0x0, valA = 0x1, valB = 0x298
   srcA = %r10, srcB = %rsi, dstE = ----, dstM = ----, Stat = AOK
M: instr = nop, Cnd = 1, valE = 0x0, valA = 0x0
   dstE = ----, dstM = ----, Stat = BUB
W: instr = mrmovq, valE = 0x268, valM = 0x1, dstE = ----, dstM = %r10, Stat = AOK
	Fetch: f_pc = 0x98, imem_instr = rmmovq, f_instr = rmmovq
	Execute: ALU: + 0x0 0x298 --> 0x298
	Writeback: Wrote 0x1 to register %r10

Cycle 28. CC=Z=0 S=0 O=0, Stat=AOK
F: predPC = 0xa2
D: instr = rmmovq, rA = %r12, rB = %rcx, valC = 0x0, valP = 0xa2, Stat = AOK
E: instr = mrmovq, valC = 0x0, valA = 0x298, valB = 0x270
   srcA = ----, srcB = %rbx, dstE = ----, dstM = %r12, Stat = AOK
M: instr = rmmovq, Cnd = 1, valE = 0x298, valA = 0x1
   dstE = ----, dstM = ----, Stat = AOK
W: instr = nop, valE = 0x0, valM = 0x0, dstE = ----, dstM = ----, Stat = BUB
	Fetch: f_pc = 0xa2, imem_instr = andq, f_instr = andq
	Execute: ALU: + 0x0 0x270 --> 0x270
	Wrote 0x1 to address 0x298

Cycle 29. CC=Z=0 S=0 O=0, Stat=AOK
F: predPC = 0xa2
D: instr = rmmovq, rA = %r12, rB = %rcx, valC = 0x0, valP = 0xa2, Stat = AOK
E: instr = nop, valC = 0x0, valA = 0x0, valB = 0x0
   srcA = ----, srcB = ----, dstE = ----, dstM = ----, Stat = BUB
M: instr = mrmovq, Cnd = 1, valE = 0x270, valA = 0x298
   dstE = ----, dstM = %r12, Stat = AOK
W: instr = rmmovq, valE = 0x298, valM = 0x0, dstE = ----, dstM = ----, Stat = AOK
	Fetch: f_pc = 0xa2, imem_instr = andq, f_instr = andq
	Memory: Read 0x2 from 0x270
	Execute: ALU: + 0x0 0x0 --> 0x0

Cycle 30. CC=Z=0 S=0 O=0, Stat=AOK
F: predPC = 0xa4
D: instr = andq, rA = %r10, rB = %r10, valC = 0x0, valP = 0xa4, Stat = AOK
E: instr = rmmovq, valC = 0x0, valA = 0x2, valB = 0x2a0
   srcA = %r12, srcB = %rcx, dstE = ----, dstM = ----, Stat = AOK
M: instr = nop, Cnd = 1, valE = 0x0, valA = 0x0
   dstE = ----, dstM = ----, Stat = BUB
W: instr = mrmovq, valE = 0x270, valM = 0x2, dstE = ----, dstM = %r12, Stat = AOK
	Fetch: f_pc = 0xa4, imem_instr = jle, f_instr = jle
	Execute: ALU: + 0x0 0x2a0 --> 0x2a0
	Writeback: Wrote 0x2 to register %r12

Cycle 31. CC=Z=0 S=0 O=0, Stat=AOK
F: predPC = 0xaf
D: instr = jle, rA = ----, rB = ----, valC = 0xaf, valP = 0xad, Stat = AOK
E: instr = andq, valC = 0x0, valA = 0x1, valB = 0x1
   srcA = %r10, srcB = %r10, dstE = %r10, dstM = ----, Stat = AOK
M: instr = rmmovq, Cnd = 1, valE = 0x2a0, valA = 0x2
   dstE = ----, dstM = ----, Stat = AOK
W: instr = nop, valE = 0x0, valM = 0x0, dstE = ----, dstM = ----, Stat = BUB
	Fetch: f_pc = 0xaf, imem_instr = andq, f_instr = andq
	Execute: ALU: & 0x1 0x1 --> 0x1
	Execute: New cc = Z=0 S=0 O=0
	Wrote 0x2 to address 0x2a0

Cycle 32. CC=Z=0 S=0 O=0, Stat=AOK
F: predPC = 0xb1
D: instr = andq, rA = %r12, rB = %r12, valC = 0x0, valP = 0xb1, Stat = AOK
E: instr = jle, valC = 0xaf, valA = 0xad, valB = 0x0
   srcA = ----, srcB = ----, dstE = ----, dstM = ----, Stat = AOK
M: instr = andq, Cnd = 0, valE = 0x1, valA = 0x1
   dstE = %r10, dstM = ----, Stat = AOK
W: instr = rmmovq, valE = 0x2a0, valM = 0x0, dstE = ----, dstM = ----, Stat = AOK
	Fetch: f_pc = 0xb1, imem_instr = jle, f_instr = jle
	Execute: instr = jle, cc = Z=0 S=0 O=0, branch not taken
	Execute: ALU: + 0x0 0x0 --> 0x0

Cycle 33. CC=Z=0 S=0 O=0, Stat=AOK
F: predPC = 0xbc
D: instr = nop, rA = ----, rB = ----, valC = 0x0, valP = 0x0, Stat = BUB
E: instr = nop, valC = 0x0, valA = 0x0, valB = 0x0
   srcA = ----, srcB = ----, dstE = ----, dstM = ----, Stat = BUB
M: instr = jle, Cnd = 0, valE = 0x0, valA = 0xad
   dstE = ----, dstM = ----, Stat = AOK
W: instr = andq, valE = 0x1, valM = 0x0, dstE = %r10, dstM = ----, Stat = AOK
	Fetch: f_pc = 0xad, imem_instr = addq, f_instr = addq
	Execute: ALU: + 0x0 0x0 --> 0x0
	Writeback: Wrote 0x1 to register %r10

Cycle 34. CC=Z=0 S=0 O=0, Stat=AOK
F: predPC = 0xaf
D: instr = addq, rA = %r9, rB = %rax, valC = 0x0, valP = 0xaf, Stat = AOK
E: instr = nop, valC = 0x0, valA = 0x0, valB = 0x0
   srcA = ----, srcB = ----, dstE = ----, dstM = ----, Stat = BUB
M: instr = nop, Cnd = 1, valE = 0x0, valA = 0x0
   dstE = ----, dstM = ----, Stat = BUB
W: instr = jle, valE = 0x0, valM = 0x0, dstE = ----, dstM = ----, Stat = AOK
	Fetch: f_pc = 0xaf, imem_instr = andq, f_instr = andq
	Execute: ALU: + 0x0 0x0 --> 0x0

Cycle 35. CC=Z=0 S=0 O=0, Stat=AOK
F: predPC = 0xb1
D: instr = andq, rA = %r12, rB = %r12, valC = 0x0, valP = 0xb1, Stat = AOK
E: instr = addq, valC = 0x0, valA = 0x1, valB = 0x0
   srcA = %r9, srcB = %rax, dstE = %rax, dstM = ----, Stat = AOK
M: instr = nop, Cnd = 1, valE = 0x0, valA = 0x0
   dstE = ----, dstM = ----, Stat = BUB
W: instr = nop, valE = 0x0, valM = 0x0, dstE = ----, dstM = ----, Stat = BUB
	Fetch: f_pc = 0xb1, imem_instr = jle, f_instr = jle
	Execute: ALU: + 0x1 0x0 --> 0x1
	Execute: New cc = Z=0 S=0 O=0

Cycle 36. CC=Z=0 S=0 O=0, Stat=AOK
F: predPC = 0xbc
D: instr = jle, rA = ----, rB = ----, valC = 0xbc, valP = 0xba, Stat = AOK
E: instr = andq, valC = 0x0, valA = 0x2, valB = 0x2
   srcA = %r12, srcB = %r12, dstE = %r12, dstM = ----, Stat = AOK
M: instr = addq, Cnd = 1, valE = 0x1, valA = 0x1
   dstE = %rax, dstM = ----, Stat = AOK
W: instr = nop, valE = 0x0, valM = 0x0, dstE = ----, dstM = ----, Stat = BUB
	Fetch: f_pc = 0xbc, imem_instr = addq, f_instr = addq
	Execute: ALU: & 0x2 0x2 --> 0x2
	Execute: New cc = Z=0 S=0 O=0

Cycle 37. CC=Z=0 S=0 O=0, Stat=AOK
F: predPC = 0xbe
D: instr = addq, rA = %r8, rB = %rdi, valC = 0x0, valP = 0xbe, Stat = AOK
E: instr = jle, valC = 0xbc, valA = 0xba, valB = 0x0
   srcA = ----, srcB = ----, dstE = ----, dstM = ----, Stat = AOK
M: instr = andq, Cnd = 0, valE = 0x2, valA = 0x2
   dstE = %r12, dstM = ----, Stat = AOK
W: instr = addq, valE = 0x1, valM = 0x0, dstE = %rax, dstM = ----, Stat = AOK
	Fetch: f_pc = 0xbe, imem_instr = addq, f_instr = addq
	Execute: instr = jle, cc = Z=0 S=0 O=0, branch not taken
	Execute: ALU: + 0x0 0x0 --> 0x0
	Writeback: Wrote 0x1 to register %rax

Cycle 38. CC=Z=0 S=0 O=0, Stat=AOK
F: predPC = 0xc0
D: instr = nop, rA = ----, rB = ----, valC = 0x0, valP = 0x0, Stat = BUB
E: instr = nop, valC = 0x0, valA = 0x0, valB = 0x0
   srcA = ----, srcB = ----, dstE = ----, dstM = ----, Stat = BUB
M: instr = jle, Cnd = 0, valE = 0x0, valA = 0xba
   dstE = ----, dstM = ----, Stat = AOK
W: instr = andq, valE = 0x2, valM = 0x0, dstE = %r12, dstM = ----, Stat = AOK
	Fetch: f_pc = 0xba, imem_instr = addq, f_instr = addq
	Execute: ALU: + 0x0 0x0 --> 0x0
	Writeback: Wrote 0x2 to register %r12

Cycle 39. CC=Z=0 S=0 O=0, Stat=AOK
F: predPC = 0xbc
D: instr = addq, rA = %r9, rB = %rax, valC = 0x0, valP = 0xbc, Stat = AOK
E: instr = nop, valC = 0x0, valA = 0x0, valB = 0x0
   srcA = ----, srcB = ----, dstE = ----, dstM = ----, Stat = BUB
M: instr = nop, Cnd = 1, valE = 0x0, valA = 0x0
   dstE = ----, dstM = ----, Stat = BUB
W: instr = jle, valE = 0x0, valM = 0x0, dstE = ----, dstM = ----, Stat = AOK
	Fetch: f_pc = 0xbc, imem_instr = addq, f_instr = addq
	Execute: ALU: + 0x0 0x0 --> 0x0

Cycle 40. CC=Z=0 S=0 O=0, Stat=AOK
F: predPC = 0xbe
D: instr = addq, rA = %r8, rB = %rdi, valC = 0x0, valP = 0xbe, Stat = AOK
E: instr = addq, valC = 0x0, valA = 0x1, valB = 0x1
   srcA = %r9, srcB = %rax, dstE = %rax, dstM = ----, Stat = AOK
M: instr = nop, Cnd = 1, valE = 0x0, valA = 0x0
   dstE = ----, dstM = ----, Stat = BUB
W: instr = nop, valE = 0x0, valM = 0x0, dstE = ----, dstM = ----, Stat = BUB
	Fetch: f_pc = 0xbe, imem_instr = addq, f_instr = addq
	Execute: ALU: + 0x1 0x1 --> 0x2
	Execute: New cc = Z=0 S=0 O=0

Cycle 41. CC=Z=0 S=0 O=0, Stat=AOK
F: predPC = 0xc0
D: instr = addq, rA = %r8, rB = %rsi, valC = 0x0, valP = 0xc0, Stat = AOK
E: instr = addq, valC = 0x0, valA = 0x10, valB = 0x268
   srcA = %r8, srcB = %rdi, dstE = %rdi, dstM = ----, Stat = AOK
M: instr = addq, Cnd = 1, valE = 0x2, valA = 0x1
   dstE = %rax, dstM = ----, Stat = AOK
W: instr = nop, valE = 0x0, valM = 0x0, dstE = ----, dstM = ----, Stat = BUB
	Fetch: f_pc = 0xc0, imem_instr = rrmovq, f_instr = rrmovq
	Execute: ALU: + 0x10 0x268 --> 0x278
	Execute: New cc = Z=0 S=0 O=0

Cycle 42. CC=Z=0 S=0 O=0, Stat=AOK
F: predPC = 0xc2
D: instr = rrmovq, rA = %r13, rB = %r12, valC = 0x0, valP = 0xc2, Stat = AOK
E: instr = addq, valC = 0x0, valA = 0x10, valB = 0x298
   srcA = %r8, srcB = %rsi, dstE = %rsi, dstM = ----, Stat = AOK
M: instr = addq, Cnd = 1, valE = 0x278, valA = 0x10
   dstE = %rdi, dstM = ----, Stat = AOK
W: instr = addq, valE = 0x2, valM = 0x0, dstE = %rax, dstM = ----, Stat = AOK
	Fetch: f_pc = 0xc2, imem_instr = subq, f_instr = subq
	Execute: ALU: + 0x10 0x298 --> 0x2a8
	Execute: New cc = Z=0 S=0 O=0
	Writeback: Wrote 0x2 to register %rax

Cycle 43. CC=Z=0 S=0 O=0, Stat=AOK
F: predPC = 0xc4
D: instr = subq, rA = %rdi, rB = %r12, valC = 0x0, valP = 0xc4, Stat = AOK
E: instr = rrmovq, valC = 0x0, valA = 0x280, valB = 0x0
   srcA = %r13, srcB = ----, dstE = %r12, dstM = ----, Stat = AOK
M: instr = addq, Cnd = 1, valE = 0x2a8, valA = 0x10
   dstE = %rsi, dstM = ----, Stat = AOK
W: instr = addq, valE = 0x278, valM = 0x0, dstE = %rdi, dstM = ----, Stat = AOK
	Fetch: f_pc = 0xc4, imem_instr = jg, f_instr = jg
	Execute: ALU: + 0x280 0x0 --> 0x280
	Writeback: Wrote 0x278 to register %rdi

Cycle 44. CC=Z=0 S=0 O=0, Stat=AOK
F: predPC = 0x72
D: instr = jg, rA = ----, rB = ----, valC = 0x72, valP = 0xcd, Stat = AOK
E: instr = subq, valC = 0x0, valA = 0x278, valB = 0x280
   srcA = %rdi, srcB = %r12, dstE = %r12, dstM = ----, Stat = AOK
M: instr = rrmovq, Cnd = 1, valE = 0x280, valA = 0x280
   dstE = %r12, dstM = ----, Stat = AOK
W: instr = addq, valE = 0x2a8, valM = 0x0, dstE = %rsi, dstM = ----, Stat = AOK
	Fetch: f_pc = 0x72, imem_instr = rrmovq, f_instr = rrmovq
	Execute: ALU: - 0x278 0x280 --> 0x8
	Execute: New cc = Z=0 S=0 O=0
	Writeback: Wrote 0x2a8 to register %rsi

Cycle 45. CC=Z=0 S=0 O=0, Stat=AOK
F: predPC = 0x74
D: instr = rrmovq, rA = %rdi, rB = %rbx, valC = 0x0, valP = 0x74, Stat = AOK
E: instr = jg, valC = 0x72, valA = 0xcd, valB = 0x0
   srcA = ----, srcB = ----, dstE = ----, dstM = ----, Stat = AOK
M: instr = subq, Cnd = 0, valE = 0x8, valA = 0x278
   dstE = %r12, dstM = ----, Stat = AOK
W: instr = rrmovq, valE = 0x280, valM = 0x0, dstE = %r12, dstM = ----, Stat = AOK
	Fetch: f_pc = 0x74, imem_instr = rrmovq, f_instr = rrmovq
	Execute: instr = jg, cc = Z=0 S=0 O=0, branch taken
	Execute: ALU: + 0x0 0x0 --> 0x0
	Writeback: Wrote 0x280 to register %r12

Cycle 46. CC=Z=0 S=0 O=0, Stat=AOK
F: predPC = 0x76
D: instr = rrmovq, rA = %rsi, rB = %rcx, valC = 0x0, valP = 0x76, Stat = AOK
E: instr = rrmovq, valC = 0x0, valA = 0x278, valB = 0x0
   srcA = %rdi, srcB = ----, dstE = %rbx, dstM = ----, Stat = AOK
M: instr = jg, Cnd = 1, valE = 0x0, valA = 0xcd
   dstE = ----, dstM = ----, Stat = AOK
W: instr = subq, valE = 0x8, valM = 0x0, dstE = %r12, dstM = ----, Stat = AOK
	Fetch: f_pc = 0x76, imem_instr = addq, f_instr = addq
	Execute: ALU: + 0x278 0x0 --> 0x278
	Writeback: Wrote 0x8 to register %r12

Cycle 47. CC=Z=0 S=0 O=0, Stat=AOK
F: predPC = 0x78
D: instr = addq, rA = %r11, rB = %rbx, valC = 0x0, valP = 0x78, Stat = AOK
E: instr = rrmovq, valC = 0x0, valA = 0x2a8, valB = 0x0
   srcA = %rsi, srcB = ----, dstE = %rcx, dstM = ----, Stat = AOK
M: instr = rrmovq, Cnd = 1, valE = 0x278, valA = 0x278
   dstE = %rbx, dstM = ----, Stat = AOK
W: instr = jg, valE = 0x0, valM = 0x0, dstE = ----, dstM = ----, Stat = AOK
	Fetch: f_pc = 0x78, imem_instr = addq, f_instr = addq
	Execute: ALU: + 0x2a8 0x0 --> 0x2a8

Cycle 48. CC=Z=0 S=0 O=0, Stat=AOK
F: predPC = 0x7a
D: instr = addq, rA = %r11, rB = %rcx, valC = 0x0, valP = 0x7a, Stat = AOK
E: instr = addq, valC = 0x0, valA = 0x8, valB = 0x278
   srcA = %r11, srcB = %rbx, dstE = %rbx, dstM = ----, Stat = AOK
M: instr = rrmovq, Cnd = 1, valE = 0x2a8, valA = 0x2a8
   dstE = %rcx, dstM = ----, Stat = AOK
W: instr = rrmovq, valE = 0x278, valM = 0x0, dstE = %rbx, dstM = ----, Stat = AOK
	Fetch: f_pc = 0x7a, imem_instr = mrmovq, f_instr = mrmovq
	Execute: ALU: + 0x8 0x278 --> 0x280
	Execute: New cc = Z=0 S=0 O=0
	Writeback: Wrote 0x278 to register %rbx

Cycle 49. CC=Z=0 S=0 O=0, Stat=AOK
F: predPC = 0x84
D: instr = mrmovq, rA = %r10, rB = %rdi, valC = 0x0, valP = 0x84, Stat = AOK
E: instr = addq, valC = 0x0, valA = 0x8, valB = 0x2a8
   srcA = %r11, srcB = %rcx, dstE = %rcx, dstM = ----, Stat = AOK
M: instr = addq, Cnd = 1, valE = 0x280, valA = 0x8
   dstE = %rbx, dstM = ----, Stat = AOK
W: instr = rrmovq, valE = 0x2a8, valM = 0x0, dstE = %rcx, dstM = ----, Stat = AOK
	Fetch: f_pc = 0x84, imem_instr = rmmovq, f_instr = rmmovq
	Execute: ALU: + 0x8 0x2a8 --> 0x2b0
	Execute: New cc = Z=0 S=0 O=0
	Writeback: Wrote 0x2a8 to register %rcx

Cycle 50. CC=Z=0 S=0 O=0, Stat=AOK
F: predPC = 0x8e
D: instr = rmmovq, rA = %r10, rB = %rsi, valC = 0x0, valP = 0x8e, Stat = AOK
E: instr = mrmovq, valC = 0x0, valA = 0x0, valB = 0x278
   srcA = ----, srcB = %rdi, dstE = ----, dstM = %r10, Stat = AOK
M: instr = addq, Cnd = 1, valE = 0x2b0, valA = 0x8
   dstE = %rcx, dstM = ----, Stat = AOK
W: instr = addq, valE = 0x280, valM = 0x0, dstE = %rbx, dstM = ----, Stat = AOK
	Fetch: f_pc = 0x8e, imem_instr = mrmovq, f_instr = mrmovq
	Execute: ALU: + 0x0 0x278 --> 0x278
	Writeback: Wrote 0x280 to register %rbx

Cycle 51. CC=Z=0 S=0 O=0, Stat=AOK
F: predPC = 0x8e
D: instr = rmmovq, rA = %r10, rB = %rsi, valC = 0x0, valP = 0x8e, Stat = AOK
E: instr = nop, valC = 0x0, valA = 0x0, valB = 0x0
   srcA = ----, srcB = ----, dstE = ----, dstM = ----, Stat = BUB
M: instr = mrmovq, Cnd = 1, valE = 0x278, valA = 0x0
   dstE = ----, dstM = %r10, Stat = AOK
W: instr = addq, valE = 0x2b0, valM = 0x0, dstE = %rcx, dstM = ----, Stat = AOK
	Fetch: f_pc = 0x8e, imem_instr = mrmovq, f_instr = mrmovq
	Memory: Read 0x3 from 0x278
	Execute: ALU: + 0x0 0x0 --> 0x0
	Writeback: Wrote 0x2b0 to register %rcx

Cycle 52. CC=Z=0 S=0 O=0, Stat=AOK
F: predPC = 0x98
D: instr = mrmovq, rA = %r12, rB = %rbx, valC = 0x0, valP = 0x98, Stat = AOK
E: instr = rmmovq, valC = 0x0, valA = 0x3, valB = 0x2a8
   srcA = %r10, srcB = %rsi, dstE = ----, dstM = ----, Stat = AOK
M: instr = nop, Cnd = 1, valE = 0x0, valA = 0x0
   dstE = ----, dstM = ----, Stat = BUB
W: instr = mrmovq, valE = 0x278, valM = 0x3, dstE = ----, dstM = %r10, Stat = AOK
	Fetch: f_pc = 0x98, imem_instr = rmmovq, f_instr = rmmovq
	Execute: ALU: + 0x0 0x2a8 --> 0x2a8
	Writeback: Wrote 0x3 to register %r10

Cycle 53. CC=Z=0 S=0 O=0, Stat=AOK
F: predPC = 0xa2
D: instr = rmmovq, rA = %r12, rB = %rcx, valC = 0x0, valP = 0xa2, Stat = AOK
E: instr = mrmovq, valC = 0x0, valA = 0x2a8, valB = 0x280
   srcA = ----, srcB = %rbx, dstE = ----, dstM = %r12, Stat = AOK
M: instr = rmmovq, Cnd = 1, valE = 0x2a8, valA = 0x3
   dstE = ----, dstM = ----, Stat = AOK
W: instr = nop, valE = 0x0, valM = 0x0, dstE = ----, dstM = ----, Stat = BUB
	Fetch: f_pc = 0xa2, imem_instr = andq, f_instr = andq
	Execute: ALU: + 0x0 0x280 --> 0x280
	Wrote 0x3 to address 0x2a8

Cycle 54. CC=Z=0 S=0 O=0, Stat=AOK
F: predPC = 0xa2
D: instr = rmmovq, rA = %r12, rB = %rcx, valC = 0x0, valP = 0xa2, Stat = AOK
E: instr = nop, valC = 0x0, valA = 0x0, valB = 0x0
   srcA = ----, srcB = ----, dstE = ----, dstM = ----, Stat = BUB
M: instr = mrmovq, Cnd = 1, valE = 0x280, valA = 0x2a8
   dstE = ----, dstM = %r12, Stat = AOK
W: instr = rmmovq, valE = 0x2a8, valM = 0x0, dstE = ----, dstM = ----, Stat = AOK
	Fetch: f_pc = 0xa2, imem_instr = andq, f_instr = andq
	Memory: Read 0xbcdefa from 0x280
	Execute: ALU: + 0x0 0x0 --> 0x0

Cycle 55. CC=Z=0 S=0 O=0, Stat=AOK
F: predPC = 0xa4
D: instr = andq, rA = %r10, rB = %r10, valC = 0x0, valP = 0xa4, Stat = AOK
E: instr = rmmovq, valC = 0x0, valA = 0xbcdefa, valB = 0x2b0
   srcA = %r12, srcB = %rcx, dstE = ----, dstM = ----, Stat = AOK
M: instr = nop, Cnd = 1, valE = 0x0, valA = 0x0
   dstE = ----, dstM = ----, Stat = BUB
W: instr = mrmovq, valE = 0x280, valM = 0xbcdefa, dstE = ----, dstM = %r12, Stat = AOK
	Fetch: f_pc = 0xa4, imem_instr = jle, f_instr = jle
	Execute: ALU: + 0x0 0x2b0 --> 0x2b0
	Writeback: Wrote 0xbcdefa to register %r12

Cycle 56. CC=Z=0 S=0 O=0, Stat=AOK
F: predPC = 0xaf
D: instr = jle, rA = ----, rB = ----, valC = 0xaf, valP = 0xad, Stat = AOK
E: instr = andq, valC = 0x0, valA = 0x3, valB = 0x3
   srcA = %r10, srcB = %r10, dstE = %r10, dstM = ----, Stat = AOK
M: instr = rmmovq, Cnd = 1, valE = 0x2b0, valA = 0xbcdefa
   dstE = ----, dstM = ----, Stat = AOK
W: instr = nop, valE = 0x0, valM = 0x0, dstE = ----, dstM = ----, Stat = BUB
	Fetch: f_pc = 0xaf, imem_instr = andq, f_instr = andq
	Execute: ALU: & 0x3 0x3 --> 0x3
	Execute: New cc = Z=0 S=0 O=0
	Wrote 0xbcdefa to address 0x2b0

Cycle 57. CC=Z=0 S=0 O=0, Stat=AOK
F: predPC = 0xb1
D: instr = andq, rA = %r12, rB = %r12, valC = 0x0, valP = 0xb1, Stat = AOK
E: instr = jle, valC = 0xaf, valA = 0xad, valB = 0x0
   srcA = ----, srcB = ----, dstE = ----, dstM = ----, Stat = AOK
M: instr = andq, Cnd = 0, valE = 0x3, valA = 0x3
   dstE = %r10, dstM = ----, Stat = AOK
W: instr = rmmovq, valE = 0x2b0, valM = 0x0, dstE = ----, dstM = ----, Stat = AOK
	Fetch: f_pc = 0xb1, imem_instr = jle, f_instr = jle
	Execute: instr = jle, cc = Z=0 S=0 O=0, branch not taken
	Execute: ALU: + 0x0 0x0 --> 0x0

Cycle 58. CC=Z=0 S=0 O=0, Stat=AOK
F: predPC = 0xbc
D: instr = nop, rA = ----, rB = ----, valC = 0x0, valP = 0x0, Stat = BUB
E: instr = nop, valC = 0x0, valA = 0x0, valB = 0x0
   srcA = ----, srcB = ----, dstE = ----, dstM = ----, Stat = BUB
M: instr = jle, Cnd = 0, valE = 0x0, valA = 0xad
   dstE = ----, dstM = ----, Stat = AOK
W: instr = andq, valE = 0x3, valM = 0x0, dstE = %r10, dstM = ----, Stat = AOK
	Fetch: f_pc = 0xad, imem_instr = addq, f_instr = addq
	Execute: ALU: + 0x0 0x0 --> 0x0
	Writeback: Wrote 0x3 to register %r10

Cycle 59. CC=Z=0 S=0 O=0, Stat=AOK
F: predPC = 0xaf
D: instr = addq, rA = %r9, rB = %rax, valC = 0x0, valP = 0xaf, Stat = AOK
E: instr = nop, valC = 0x0, valA = 0x0, valB = 0x0
   srcA = ----, srcB = ----, dstE = ----, dstM = ----, Stat = BUB
M: instr = nop, Cnd = 1, valE = 0x0, valA = 0x0
   dstE = ----, dstM = ----, Stat = BUB
W: instr = jle, valE = 0x0, valM = 0x0, dstE = ----, dstM = ----, Stat = AOK
	Fetch: f_pc = 0xaf, imem_instr = andq, f_instr = andq
	Execute: ALU: + 0x0 0x0 --> 0x0

Cycle 60. CC=Z=0 S=0 O=0, Stat=AOK
F: predPC = 0xb1
D: instr = andq, rA = %r12, rB = %r12, valC = 0x0, valP = 0xb1, Stat = AOK
E: instr = addq, valC = 0x0, valA = 0x1, valB = 0x2
   srcA = %r9, srcB = %rax, dstE = %rax, dstM = ----, Stat = AOK
M: instr = nop, Cnd = 1, valE = 0x0, valA = 0x0
   dstE = ----, dstM = ----, Stat = BUB
W: instr = nop, valE = 0x0, valM = 0x0, dstE = ----, dstM = ----, Stat = BUB
	Fetch: f_pc = 0xb1, imem_instr = jle, f_instr = jle
	Execute: ALU: + 0x1 0x2 --> 0x3
	Execute: New cc = Z=0 S=0 O=0

Cycle 61. CC=Z=0 S=0 O=0, Stat=AOK
F: predPC = 0xbc
D: instr = jle, rA = ----, rB = ----, valC = 0xbc, valP = 0xba, Stat = AOK
E: instr = andq, valC = 0x0, valA = 0xbcdefa, valB = 0xbcdefa
   srcA = %r12, srcB = %r12, dstE = %r12, dstM = ----, Stat = AOK
M: instr = addq, Cnd = 1, valE = 0x3, valA = 0x1
   dstE = %rax, dstM = ----, Stat = AOK
W: instr = nop, valE = 0x0, valM = 0x0, dstE = ----, dstM = ----, Stat = BUB
	Fetch: f_pc = 0xbc, imem_instr = addq, f_instr = addq
	Execute: ALU: & 0xbcdefa 0xbcdefa --> 0xbcdefa
	Execute: New cc = Z=0 S=0 O=0

Cycle 62. CC=Z=0 S=0 O=0, Stat=AOK
F: predPC = 0xbe
D: instr = addq, rA = %r8, rB = %rdi, valC = 0x0, valP = 0xbe, Stat = AOK
E: instr = jle, valC = 0xbc, valA = 0xba, valB = 0x0
   srcA = ----, srcB = ----, dstE = ----, dstM = ----, Stat = AOK
M: instr = andq, Cnd = 0, valE = 0xbcdefa, valA = 0xbcdefa
   dstE = %r12, dstM = ----, Stat = AOK
W: instr = addq, valE = 0x3, valM = 0x0, dstE = %rax, dstM = ----, Stat = AOK
	Fetch: f_pc = 0xbe, imem_instr = addq, f_instr = addq
	Execute: instr = jle, cc = Z=0 S=0 O=0, branch not taken
	Execute: ALU: + 0x0 0x0 --> 0x0
	Writeback: Wrote 0x3 to register %rax

Cycle 63. CC=Z=0 S=0 O=0, Stat=AOK
F: predPC = 0xc0
D: instr = nop, rA = ----, rB = ----, valC = 0x0, valP = 0x0, Stat = BUB
E: instr = nop, valC = 0x0, valA = 0x0, valB = 0x0
   srcA = ----, srcB = ----, dstE = ----, dstM = ----, Stat = BUB
M: instr = jle, Cnd = 0, valE = 0x0, valA = 0xba
   dstE = ----, dstM = ----, Stat = AOK
W: instr = andq, valE = 0xbcdefa, valM = 0x0, dstE = %r12, dstM = ----, Stat = AOK
	Fetch: f_pc = 0xba, imem_instr = addq, f_instr = addq
	Execute: ALU: + 0x0 0x0 --> 0x0
	Writeback: Wrote 0xbcdefa to register %r12

Cycle 64. CC=Z=0 S=0 O=0, Stat=AOK
F: predPC = 0xbc
D: instr = addq, rA = %r9, rB = %rax, valC = 0x0, valP = 0xbc, Stat = AOK
E: instr = nop, valC = 0x0, valA = 0x0, valB = 0x0
   srcA = ----, srcB = ----, dstE = ----, dstM = ----, Stat = BUB
M: instr = nop, Cnd = 1, valE = 0x0, valA = 0x0
   dstE = ----, dstM = ----, Stat = BUB
W: instr = jle, valE = 0x0, valM = 0x0, dstE = ----, dstM = ----, Stat = AOK
	Fetch: f_pc = 0xbc, imem_instr = addq, f_instr = addq
	Execute: ALU: + 0x0 0x0 --> 0x0

Cycle 65. CC=Z=0 S=0 O=0, Stat=AOK
F: predPC = 0xbe
D: instr = addq, rA = %r8, rB = %rdi, valC = 0x0, valP = 0xbe, Stat = AOK
E: instr = addq, valC = 0x0, valA = 0x1, valB = 0x3
   srcA = %r9, srcB = %rax, dstE = %rax, dstM = ----, Stat = AOK
M: instr = nop, Cnd = 1, valE = 0x0, valA = 0x0
   dstE = ----, dstM = ----, Stat = BUB
W: instr = nop, valE = 0x0, valM = 0x0, dstE = ----, dstM = ----, Stat = BUB
	Fetch: f_pc = 0xbe, imem_instr = addq, f_instr = addq
	Execute: ALU: + 0x1 0x3 --> 0x4
	Execute: New cc = Z=0 S=0 O=0

Cycle 66. CC=Z=0 S=0 O=0, Stat=AOK
F: predPC = 0xc0
D: instr = addq, rA = %r8, rB = %rsi, valC = 0x0, valP = 0xc0, Stat = AOK
E: instr = addq, valC = 0x0, valA = 0x10, valB = 0x278
   srcA = %r8, srcB = %rdi, dstE = %rdi, dstM = ----, Stat = AOK
M: instr = addq, Cnd = 1, valE = 0x4, valA = 0x1
   dstE = %rax, dstM = ----, Stat = AOK
W: instr = nop, valE = 0x0, valM = 0x0, dstE = ----, dstM = ----, Stat = BUB
	Fetch: f_pc = 0xc0, imem_instr = rrmovq, f_instr = rrmovq
	Execute: ALU: + 0x10 0x278 --> 0x288
	Execute: New cc = Z=0 S=0 O=0

Cycle 67. CC=Z=0 S=0 O=0, Stat=AOK
F: predPC = 0xc2
D: instr = rrmovq, rA = %r13, rB = %r12, valC = 0x0, valP = 0xc2, Stat = AOK
E: instr = addq, valC = 0x0, valA = 0x10, valB = 0x2a8
   srcA = %r8, srcB = %rsi, dstE = %rsi, dstM = ----, Stat = AOK
M: instr = addq, Cnd = 1, valE = 0x288, valA = 0x10
   dstE = %rdi, dstM = ----, Stat = AOK
W: instr = addq, valE = 0x4, valM = 0x0, dstE = %rax, dstM = ----, Stat = AOK
	Fetch: f_pc = 0xc2, imem_instr = subq, f_instr = subq
	Execute: ALU: + 0x10 0x2a8 --> 0x2b8
	Execute: New cc = Z=0 S=0 O=0
	Writeback: Wrote 0x4 to register %rax

Cycle 68. CC=Z=0 S=0 O=0, Stat=AOK
F: predPC = 0xc4
D: instr = subq, rA = %rdi, rB = %r12, valC = 0x0, valP = 0xc4, Stat = AOK
E: instr = rrmovq, valC = 0x0, valA = 0x280, valB = 0x0
   srcA = %r13, srcB = ----, dstE = %r12, dstM = ----, Stat = AOK
M: instr = addq, Cnd = 1, valE = 0x2b8, valA = 0x10
   dstE = %rsi, dstM = ----, Stat = AOK
W: instr = addq, valE = 0x288, valM = 0x0, dstE = %rdi, dstM = ----, Stat = AOK
	Fetch: f_pc = 0xc4, imem_instr = jg, f_instr = jg
	Execute: ALU: + 0x280 0x0 --> 0x280
	Writeback: Wrote 0x288 to register %rdi

Cycle 69. CC=Z=0 S=0 O=0, Stat=AOK
F: predPC = 0x72
D: instr = jg, rA = ----, rB = ----, valC = 0x72, valP = 0xcd, Stat = AOK
E: instr = subq, valC = 0x0, valA = 0x288, valB = 0x280
   srcA = %rdi, srcB = %r12, dstE = %r12, dstM = ----, Stat = AOK
M: instr = rrmovq, Cnd = 1, valE = 0x280, valA = 0x280
   dstE = %r12, dstM = ----, Stat = AOK
W: instr = addq, valE = 0x2b8, valM = 0x0, dstE = %rsi, dstM = ----, Stat = AOK
	Fetch: f_pc = 0x72, imem_instr = rrmovq, f_instr = rrmovq
	Execute: ALU: - 0x288 0x280 --> 0xfffffffffffffff8
	Execute: New cc = Z=0 S=1 O=0
	Writeback: Wrote 0x2b8 to register %rsi

Cycle 70. CC=Z=0 S=1 O=0, Stat=AOK
F: predPC = 0x74
D: instr = rrmovq, rA = %rdi, rB = %rbx, valC = 0x0, valP = 0x74, Stat = AOK
E: instr = jg, valC = 0x72, valA = 0xcd, valB = 0x0
   srcA = ----, srcB = ----, dstE = ----, dstM = ----, Stat = AOK
M: instr = subq, Cnd = 0, valE = 0xfffffffffffffff8, valA = 0x288
   dstE = %r12, dstM = ----, Stat = AOK
W: instr = rrmovq, valE = 0x280, valM = 0x0, dstE = %r12, dstM = ----, Stat = AOK
	Fetch: f_pc = 0x74, imem_instr = rrmovq, f_instr = rrmovq
	Execute: instr = jg, cc = Z=0 S=1 O=0, branch not taken
	Execute: ALU: + 0x0 0x0 --> 0x0
	Writeback: Wrote 0x280 to register %r12

Cycle 71. CC=Z=0 S=1 O=0, Stat=AOK
F: predPC = 0x76
D: instr = nop, rA = ----, rB = ----, valC = 0x0, valP = 0x0, Stat = BUB
E: instr = nop, valC = 0x0, valA = 0x0, valB = 0x0
   srcA = ----, srcB = ----, dstE = ----, dstM = ----, Stat = BUB
M: instr = jg, Cnd = 0, valE = 0x0, valA = 0xcd
   dstE = ----, dstM = ----, Stat = AOK
W: instr = subq, valE = 0xfffffffffffffff8, valM = 0x0, dstE = %r12, dstM = ----, Stat = AOK
	Fetch: f_pc = 0xcd, imem_instr = andq, f_instr = andq
	Execute: ALU: + 0x0 0x0 --> 0x0
	Writeback: Wrote 0xfffffffffffffff8 to register %r12

Cycle 72. CC=Z=0 S=1 O=0, Stat=AOK
F: predPC = 0xcf
D: instr = andq, rA = %r9, rB = %rdx, valC = 0x0, valP = 0xcf, Stat = AOK
E: instr = nop, valC = 0x0, valA = 0x0, valB = 0x0
   srcA = ----, srcB = ----, dstE = ----, dstM = ----, Stat = BUB
M: instr = nop, Cnd = 1, valE = 0x0, valA = 0x0
   dstE = ----, dstM = ----, Stat = BUB
W: instr = jg, valE = 0x0, valM = 0x0, dstE = ----, dstM = ----, Stat = AOK
	Fetch: f_pc = 0xcf, imem_instr = je, f_instr = je
	Execute: ALU: + 0x0 0x0 --> 0x0

Cycle 73. CC=Z=0 S=1 O=0, Stat=AOK
F: predPC = 0xf9
D: instr = je, rA = ----, rB = ----, valC = 0xf9, valP = 0xd8, Stat = AOK
E: instr = andq, valC = 0x0, valA = 0x1, valB = 0x3
   srcA = %r9, srcB = %rdx, dstE = %rdx, dstM = ----, Stat = AOK
M: instr = nop, Cnd = 1, valE = 0x0, valA = 0x0
   dstE = ----, dstM = ----, Stat = BUB
W: instr = nop, valE = 0x0, valM = 0x0, dstE = ----, dstM = ----, Stat = BUB
	Fetch: f_pc = 0xf9, imem_instr = ret, f_instr = ret
	Execute: ALU: & 0x1 0x3 --> 0x1
	Execute: New cc = Z=0 S=0 O=0

Cycle 74. CC=Z=0 S=0 O=0, Stat=AOK
F: predPC = 0xfa
D: instr = ret, rA = ----, rB = ----, valC = 0x0, valP = 0xfa, Stat = AOK
E: instr = je, valC = 0xf9, valA = 0xd8, valB = 0x0
   srcA = ----, srcB = ----, dstE = ----, dstM = ----, Stat = AOK
M: instr = andq, Cnd = 1, valE = 0x1, valA = 0x1
   dstE = %rdx, dstM = ----, Stat = AOK
W: instr = nop, valE = 0x0, valM = 0x0, dstE = ----, dstM = ----, Stat = BUB
	Fetch: f_pc = 0xfa, imem_instr = irmovq, f_instr = irmovq
	Execute: instr = je, cc = Z=0 S=0 O=0, branch not taken
	Execute: ALU: + 0x0 0x0 --> 0x0

Cycle 75. CC=Z=0 S=0 O=0, Stat=AOK
F: predPC = 0xfa
D: instr = nop, rA = ----, rB = ----, valC = 0x0, valP = 0x0, Stat = BUB
E: instr = nop, valC = 0x0, valA = 0x0, valB = 0x0
   srcA = ----, srcB = ----, dstE = ----, dstM = ----, Stat = BUB
M: instr = je, Cnd = 0, valE = 0x0, valA = 0xd8
   dstE = ----, dstM = ----, Stat = AOK
W: instr = andq, valE = 0x1, valM = 0x0, dstE = %rdx, dstM = ----, Stat = AOK
	Fetch: f_pc = 0xd8, imem_instr = mrmovq, f_instr = mrmovq
	Execute: ALU: + 0x0 0x0 --> 0x0
	Writeback: Wrote 0x1 to register %rdx

Cycle 76. CC=Z=0 S=0 O=0, Stat=AOK
F: predPC = 0xe2
D: instr = mrmovq, rA = %r10, rB = %rdi, valC = 0x0, valP = 0xe2, Stat = AOK
E: instr = nop, valC = 0x0, valA = 0x0, valB = 0x0
   srcA = ----, srcB = ----, dstE = ----, dstM = ----, Stat = BUB
M: instr = nop, Cnd = 1, valE = 0x0, valA = 0x0
   dstE = ----, dstM = ----, Stat = BUB
W: instr = je, valE = 0x0, valM = 0x0, dstE = ----, dstM = ----, Stat = AOK
	Fetch: f_pc = 0xe2, imem_instr = rmmovq, f_instr = rmmovq
	Execute: ALU: + 0x0 0x0 --> 0x0

Cycle 77. CC=Z=0 S=0 O=0, Stat=AOK
F: predPC = 0xec
D: instr = rmmovq, rA = %r10, rB = %rsi, valC = 0x0, valP = 0xec, Stat = AOK
E: instr = mrmovq, valC = 0x0, valA = 0x0, valB = 0x288
   srcA = ----, srcB = %rdi, dstE = ----, dstM = %r10, Stat = AOK
M: instr = nop, Cnd = 1, valE = 0x0, valA = 0x0
   dstE = ----, dstM = ----, Stat = BUB
W: instr = nop, valE = 0x0, valM = 0x0, dstE = ----, dstM = ----, Stat = BUB
	Fetch: f_pc = 0xec, imem_instr = andq, f_instr = andq
	Execute: ALU: + 0x0 0x288 --> 0x288

Cycle 78. CC=Z=0 S=0 O=0, Stat=AOK
F: predPC = 0xec
D: instr = rmmovq, rA = %r10, rB = %rsi, valC = 0x0, valP = 0xec, Stat = AOK
E: instr = nop, valC = 0x0, valA = 0x0, valB = 0x0
   srcA = ----, srcB = ----, dstE = ----, dstM = ----, Stat = BUB
M: instr = mrmovq, Cnd = 1, valE = 0x288, valA = 0x0
   dstE = ----, dstM = %r10, Stat = AOK
W: instr = nop, valE = 0x0, valM = 0x0, dstE = ----, dstM = ----, Stat = BUB
	Fetch: f_pc = 0xec, imem_instr = andq, f_instr = andq
	Memory: Read 0x0 from 0x288
	Execute: ALU: + 0x0 0x0 --> 0x0

Cycle 79. CC=Z=0 S=0 O=0, Stat=AOK
F: predPC = 0xee
D: instr = andq, rA = %r10, rB = %r10, valC = 0x0, valP = 0xee, Stat = AOK
E: instr = rmmovq, valC = 0x0, valA = 0x0, valB = 0x2b8
   srcA = %r10, srcB = %rsi, dstE = ----, dstM = ----, Stat = AOK
M: instr = nop, Cnd = 1, valE = 0x0, valA = 0x0
   dstE = ----, dstM = ----, Stat = BUB
W: instr = mrmovq, valE = 0x288, valM = 0x0, dstE = ----, dstM = %r10, Stat = AOK
	Fetch: f_pc = 0xee, imem_instr = jle, f_instr = jle
	Execute: ALU: + 0x0 0x2b8 --> 0x2b8
	Writeback: Wrote 0x0 to register %r10

Cycle 80. CC=Z=0 S=0 O=0, Stat=AOK
F: predPC = 0xf9
D: instr = jle, rA = ----, rB = ----, valC = 0xf9, valP = 0xf7, Stat = AOK
E: instr = andq, valC = 0x0, valA = 0x0, valB = 0x0
   srcA = %r10, srcB = %r10, dstE = %r10, dstM = ----, Stat = AOK
M: instr = rmmovq, Cnd = 1, valE = 0x2b8, valA = 0x0
   dstE = ----, dstM = ----, Stat = AOK
W: instr = nop, valE = 0x0, valM = 0x0, dstE = ----, dstM = ----, Stat = BUB
	Fetch: f_pc = 0xf9, imem_instr = ret, f_instr = ret
	Execute: ALU: & 0x0 0x0 --> 0x0
	Execute: New cc = Z=1 S=0 O=0
	Wrote 0x0 to address 0x2b8

Cycle 81. CC=Z=1 S=0 O=0, Stat=AOK
F: predPC = 0xfa
D: instr = ret, rA = ----, rB = ----, valC = 0x0, valP = 0xfa, Stat = AOK
E: instr = jle, valC = 0xf9, valA = 0xf7, valB = 0x0
   srcA = ----, srcB = ----, dstE = ----, dstM = ----, Stat = AOK
M: instr = andq, Cnd = 0, valE = 0x0, valA = 0x0
   dstE = %r10, dstM = ----, Stat = AOK
W: instr = rmmovq, valE = 0x2b8, valM = 0x0, dstE = ----, dstM = ----, Stat = AOK
	Fetch: f_pc = 0xfa, imem_instr = irmovq, f_instr = irmovq
	Execute: instr = jle, cc = Z=1 S=0 O=0, branch taken
	Execute: ALU: + 0x0 0x0 --> 0x0

Cycle 82. CC=Z=1 S=0 O=0, Stat=AOK
F: predPC = 0xfa
D: instr = nop, rA = ----, rB = ----, valC = 0x0, valP = 0x0, Stat = BUB
E: instr = ret, valC = 0x0, valA = 0x330, valB = 0x330
   srcA = %rsp, srcB = %rsp, dstE = %rsp, dstM = ----, Stat = AOK
M: instr = jle, Cnd = 1, valE = 0x0, valA = 0xf7
   dstE = ----, dstM = ----, Stat = AOK
W: instr = andq, valE = 0x0, valM = 0x0, dstE = %r10, dstM = ----, Stat = AOK
	Fetch: f_pc = 0xfa, imem_instr = irmovq, f_instr = irmovq
	Execute: ALU: + 0x8 0x330 --> 0x338
	Writeback: Wrote 0x0 to register %r10

Cycle 83. CC=Z=1 S=0 O=0, Stat=AOK
F: predPC = 0xfa
D: instr = nop, rA = ----, rB = ----, valC = 0x0, valP = 0x0, Stat = BUB
E: instr = nop, valC = 0x0, valA = 0x0, valB = 0x0
   srcA = ----, srcB = ----, dstE = ----, dstM = ----, Stat = BUB
M: instr = ret, Cnd = 1, valE = 0x338, valA = 0x330
   dstE = %rsp, dstM = ----, Stat = AOK
W: instr = jle, valE = 0x0, valM = 0x0, dstE = ----, dstM = ----, Stat = AOK
	Fetch: f_pc = 0xfa, imem_instr = irmovq, f_instr = irmovq
	Memory: Read 0x31 from 0x330
	Execute: ALU: + 0x0 0x0 --> 0x0

Cycle 84. CC=Z=1 S=0 O=0, Stat=AOK
F: predPC = 0xfa
D: instr = nop, rA = ----, rB = ----, valC = 0x0, valP = 0x0, Stat = BUB
E: instr = nop, valC = 0x0, valA = 0x0, valB = 0x0
   srcA = ----, srcB = ----, dstE = ----, dstM = ----, Stat = BUB
M: instr = nop, Cnd = 1, valE = 0x0, valA = 0x0
   dstE = ----, dstM = ----, Stat = BUB
W: instr = ret, valE = 0x338, valM = 0x31, dstE = %rsp, dstM = ----, Stat = AOK
	Fetch: f_pc = 0x31, imem_instr = call, f_instr = call
	Execute: ALU: + 0x0 0x0 --> 0x0
	Writeback: Wrote 0x338 to register %rsp

Cycle 85. CC=Z=1 S=0 O=0, Stat=AOK
F: predPC = 0xfa
D: instr = call, rA = ----, rB = ----, valC = 0xfa, valP = 0x3a, Stat = AOK
E: instr = nop, valC = 0x0, valA = 0x0, valB = 0x0
   srcA = ----, srcB = ----, dstE = ----, dstM = ----, Stat = BUB
M: instr = nop, Cnd = 1, valE = 0x0, valA = 0x0
   dstE = ----, dstM = ----, Stat = BUB
W: instr = nop, valE = 0x0, valM = 0x0, dstE = ----, dstM = ----, Stat = BUB
	Fetch: f_pc = 0xfa, imem_instr = irmovq, f_instr = irmovq
	Execute: ALU: + 0x0 0x0 --> 0x0

Cycle 86. CC=Z=1 S=0 O=0, Stat=AOK
F: predPC = 0x104
D: instr = irmovq, rA = ----, rB = %r10, valC = 0x3, valP = 0x104, Stat = AOK
E: instr = call, valC = 0xfa, valA = 0x3a, valB = 0x338
   srcA = ----, srcB = %rsp, dstE = %rsp, dstM = ----, Stat = AOK
M: instr = nop, Cnd = 1, valE = 0x0, valA = 0x0
   dstE = ----, dstM = ----, Stat = BUB
W: instr = nop, valE = 0x0, valM = 0x0, dstE = ----, dstM = ----, Stat = BUB
	Fetch: f_pc = 0x104, imem_instr = subq, f_instr = subq
	Execute: ALU: + 0xfffffffffffffff8 0x338 --> 0x330

Cycle 87. CC=Z=1 S=0 O=0, Stat=AOK
F: predPC = 0x106
D: instr = subq, rA = %r10, rB = %rax, valC = 0x0, valP = 0x106, Stat = AOK
E: instr = irmovq, valC = 0x3, valA = 0x0, valB = 0x0
   srcA = ----, srcB = ----, dstE = %r10, dstM = ----, Stat = AOK
M: instr = call, Cnd = 1, valE = 0x330, valA = 0x3a
   dstE = %rsp, dstM = ----, Stat = AOK
W: instr = nop, valE = 0x0, valM = 0x0, dstE = ----, dstM = ----, Stat = BUB
	Fetch: f_pc = 0x106, imem_instr = je, f_instr = je
	Execute: ALU: + 0x3 0x0 --> 0x3
	Wrote 0x3a to address 0x330

Cycle 88. CC=Z=1 S=0 O=0, Stat=AOK
F: predPC = 0x122
D: instr = je, rA = ----, rB = ----, valC = 0x122, valP = 0x10f, Stat = AOK
E: instr = subq, valC = 0x0, valA = 0x3, valB = 0x4
   srcA = %r10, srcB = %rax, dstE = %rax, dstM = ----, Stat = AOK
M: instr = irmovq, Cnd = 1, valE = 0x3, valA = 0x0
   dstE = %r10, dstM = ----, Stat = AOK
W: instr = call, valE = 0x330, valM = 0x0, dstE = %rsp, dstM = ----, Stat = AOK
	Fetch: f_pc = 0x122, imem_instr = irmovq, f_instr = irmovq
	Execute: ALU: - 0x3 0x4 --> 0x1
	Execute: New cc = Z=0 S=0 O=0
	Writeback: Wrote 0x330 to register %rsp

Cycle 89. CC=Z=0 S=0 O=0, Stat=AOK
F: predPC = 0x12c
D: instr = irmovq, rA = ----, rB = %rax, valC = 0xfa, valP = 0x12c, Stat = AOK
E: instr = je, valC = 0x122, valA = 0x10f, valB = 0x0
   srcA = ----, srcB = ----, dstE = ----, dstM = ----, Stat = AOK
M: instr = subq, Cnd = 1, valE = 0x1, valA = 0x3
   dstE = %rax, dstM = ----, Stat = AOK
W: instr = irmovq, valE = 0x3, valM = 0x0, dstE = %r10, dstM = ----, Stat = AOK
	Fetch: f_pc = 0x12c, imem_instr = irmovq, f_instr = irmovq
	Execute: instr = je, cc = Z=0 S=0 O=0, branch not taken
	Execute: ALU: + 0x0 0x0 --> 0x0
	Writeback: Wrote 0x3 to register %r10

Cycle 90. CC=Z=0 S=0 O=0, Stat=AOK
F: predPC = 0x136
D: instr = nop, rA = ----, rB = ----, valC = 0x0, valP = 0x0, Stat = BUB
E: instr = nop, valC = 0x0, valA = 0x0, valB = 0x0
   srcA = ----, srcB = ----, dstE = ----, dstM = ----, Stat = BUB
M: instr = je, Cnd = 0, valE = 0x0, valA = 0x10f
   dstE = ----, dstM = ----, Stat = AOK
W: instr = subq, valE = 0x1, valM = 0x0, dstE = %rax, dstM = ----, Stat = AOK
	Fetch: f_pc = 0x10f, imem_instr = irmovq, f_instr = irmovq
	Execute: ALU: + 0x0 0x0 --> 0x0
	Writeback: Wrote 0x1 to register %rax

Cycle 91. CC=Z=0 S=0 O=0, Stat=AOK
F: predPC = 0x119
D: instr = irmovq, rA = ----, rB = %rax, valC = 0xbbbb, valP = 0x119, Stat = AOK
E: instr = nop, valC = 0x0, valA = 0x0, valB = 0x0
   srcA = ----, srcB = ----, dstE = ----, dstM = ----, Stat = BUB
M: instr = nop, Cnd = 1, valE = 0x0, valA = 0x0
   dstE = ----, dstM = ----, Stat = BUB
W: instr = je, valE = 0x0, valM = 0x0, dstE = ----, dstM = ----, Stat = AOK
	Fetch: f_pc = 0x119, imem_instr = jmp, f_instr = jmp
	Execute: ALU: + 0x0 0x0 --> 0x0

Cycle 92. CC=Z=0 S=0 O=0, Stat=AOK
F: predPC = 0x260
D: instr = jmp, rA = ----, rB = ----, valC = 0x260, valP = 0x122, Stat = AOK
E: instr = irmovq, valC = 0xbbbb, valA = 0x0, valB = 0x0
   srcA = ----, srcB = ----, dstE = %rax, dstM = ----, Stat = AOK
M: instr = nop, Cnd = 1, valE = 0x0, valA = 0x0
   dstE = ----, dstM = ----, Stat = BUB
W: instr = nop, valE = 0x0, valM = 0x0, dstE = ----, dstM = ----, Stat = BUB
	Fetch: f_pc = 0x260, imem_instr = ret, f_instr = ret
	Execute: ALU: + 0xbbbb 0x0 --> 0xbbbb

Cycle 93. CC=Z=0 S=0 O=0, Stat=AOK
F: predPC = 0x261
D: instr = ret, rA = ----, rB = ----, valC = 0x0, valP = 0x261, Stat = AOK
E: instr = jmp, valC = 0x260, valA = 0x122, valB = 0x0
   srcA = ----, srcB = ----, dstE = ----, dstM = ----, Stat = AOK
M: instr = irmovq, Cnd = 1, valE = 0xbbbb, valA = 0x0
   dstE = %rax, dstM = ----, Stat = AOK
W: instr = nop, valE = 0x0, valM = 0x0, dstE = ----, dstM = ----, Stat = BUB
	Fetch: f_pc = 0x261, imem_instr = halt, f_instr = halt
	Execute: instr = jmp, cc = Z=0 S=0 O=0, branch taken
	Execute: ALU: + 0x0 0x0 --> 0x0

Cycle 94. CC=Z=0 S=0 O=0, Stat=AOK
F: predPC = 0x261
D: instr = nop, rA = ----, rB = ----, valC = 0x0, valP = 0x0, Stat = BUB
E: instr = ret, valC = 0x0, valA = 0x330, valB = 0x330
   srcA = %rsp, srcB = %rsp, dstE = %rsp, dstM = ----, Stat = AOK
M: instr = jmp, Cnd = 1, valE = 0x0, valA = 0x122
   dstE = ----, dstM = ----, Stat = AOK
W: instr = irmovq, valE = 0xbbbb, valM = 0x0, dstE = %rax, dstM = ----, Stat = AOK
	Fetch: f_pc = 0x261, imem_instr = halt, f_instr = halt
	Execute: ALU: + 0x8 0x330 --> 0x338
	Writeback: Wrote 0xbbbb to register %rax

Cycle 95. CC=Z=0 S=0 O=0, Stat=AOK
F: predPC = 0x261
D: instr = nop, rA = ----, rB = ----, valC = 0x0, valP = 0x0, Stat = BUB
E: instr = nop, valC = 0x0, valA = 0x0, valB = 0x0
   srcA = ----, srcB = ----, dstE = ----, dstM = ----, Stat = BUB
M: instr = ret, Cnd = 1, valE = 0x338, valA = 0x330
   dstE = %rsp, dstM = ----, Stat = AOK
W: instr = jmp, valE = 0x0, valM = 0x0, dstE = ----, dstM = ----, Stat = AOK
	Fetch: f_pc = 0x261, imem_instr = halt, f_instr = halt
	Memory: Read 0x3a from 0x330
	Execute: ALU: + 0x0 0x0 --> 0x0

Cycle 96. CC=Z=0 S=0 O=0, Stat=AOK
F: predPC = 0x261
D: instr = nop, rA = ----, rB = ----, valC = 0x0, valP = 0x0, Stat = BUB
E: instr = nop, valC = 0x0, valA = 0x0, valB = 0x0
   srcA = ----, srcB = ----, dstE = ----, dstM = ----, Stat = BUB
M: instr = nop, Cnd = 1, valE = 0x0, valA = 0x0
   dstE = ----, dstM = ----, Stat = BUB
W: instr = ret, valE = 0x338, valM = 0x3a, dstE = %rsp, dstM = ----, Stat = AOK
	Fetch: f_pc = 0x3a, imem_instr = halt, f_instr = halt
	Execute: ALU: + 0x0 0x0 --> 0x0
	Writeback: Wrote 0x338 to register %rsp

Cycle 97. CC=Z=0 S=0 O=0, Stat=AOK
F: predPC = 0x3b
D: instr = halt, rA = ----, rB = ----, valC = 0x0, valP = 0x3b, Stat = HLT
E: instr = nop, valC = 0x0, valA = 0x0, valB = 0x0
   srcA = ----, srcB = ----, dstE = ----, dstM = ----, Stat = BUB
M: instr = nop, Cnd = 1, valE = 0x0, valA = 0x0
   dstE = ----, dstM = ----, Stat = BUB
W: instr = nop, valE = 0x0, valM = 0x0, dstE = ----, dstM = ----, Stat = BUB
	Fetch: f_pc = 0x3b, imem_instr = xorq, f_instr = xorq
	Execute: ALU: + 0x0 0x0 --> 0x0

Cycle 98. CC=Z=0 S=0 O=0, Stat=AOK
F: predPC = 0x3d
D: instr = xorq, rA = %rax, rB = %rax, valC = 0x0, valP = 0x3d, Stat = AOK
E: instr = halt, valC = 0x0, valA = 0x0, valB = 0x0
   srcA = ----, srcB = ----, dstE = ----, dstM = ----, Stat = HLT
M: instr = nop, Cnd = 1, valE = 0x0, valA = 0x0
   dstE = ----, dstM = ----, Stat = BUB
W: instr = nop, valE = 0x0, valM = 0x0, dstE = ----, dstM = ----, Stat = BUB
	Fetch: f_pc = 0x3d, imem_instr = andq, f_instr = andq
	Execute: ALU: + 0x0 0x0 --> 0x0

Cycle 99. CC=Z=0 S=0 O=0, Stat=AOK
F: predPC = 0x3f
D: instr = andq, rA = %rdx, rB = %rdx, valC = 0x0, valP = 0x3f, Stat = AOK
E: instr = xorq, valC = 0x0, valA = 0xbbbb, valB = 0xbbbb
   srcA = %rax, srcB = %rax, dstE = %rax, dstM = ----, Stat = AOK
M: instr = halt, Cnd = 1, valE = 0x0, valA = 0x0
   dstE = ----, dstM = ----, Stat = HLT
W: instr = nop, valE = 0x0, valM = 0x0, dstE = ----, dstM = ----, Stat = BUB
	Fetch: f_pc = 0x3f, imem_instr = jle, f_instr = jle
	Execute: ALU: ^ 0xbbbb 0xbbbb --> 0x0

Cycle 100. CC=Z=0 S=0 O=0, Stat=AOK
F: predPC = 0xf9
D: instr = jle, rA = ----, rB = ----, valC = 0xf9, valP = 0x48, Stat = AOK
E: instr = andq, valC = 0x0, valA = 0x1, valB = 0x1
   srcA = %rdx, srcB = %rdx, dstE = %rdx, dstM = ----, Stat = AOK
M: instr = nop, Cnd = 0, valE = 0x0, valA = 0x0
   dstE = ----, dstM = ----, Stat = BUB
W: instr = halt, valE = 0x0, valM = 0x0, dstE = ----, dstM = ----, Stat = HLT
	Fetch: f_pc = 0xf9, imem_instr = ret, f_instr = ret
	Execute: ALU: & 0x1 0x1 --> 0x1
101 instructions executed
Status = HLT
Condition Codes: Z=0 S=0 O=0
Changed Register State:
%rax:	0x0000000000000000	0x000000000000bbbb
%rcx:	0x0000000000000000	0x00000000000002b0
%rdx:	0x0000000000000000	0x0000000000000001
%rbx:	0x0000000000000000	0x0000000000000280
%rsp:	0x0000000000000000	0x0000000000000338
%rsi:	0x0000000000000000	0x00000000000002b8
%rdi:	0x0000000000000000	0x0000000000000288
%r8:	0x0000000000000000	0x0000000000000010
%r9:	0x0000000000000000	0x0000000000000001
%r10:	0x0000000000000000	0x0000000000000003
%r11:	0x0000000000000000	0x0000000000000008
%r12:	0x0000000000000000	0xfffffffffffffff8
%r13:	0x0000000000000000	0x0000000000000280
Changed Memory State:
0x0298:	0x0000000000cdefab	0x0000000000000001
0x02a0:	0x0000000000cdefab	0x0000000000000002
0x02a8:	0x0000000000cdefab	0x0000000000000003
0x02b0:	0x0000000000defabc	0x0000000000bcdefa
0x0330:	0x0000000000000000	0x000000000000003a
CPI: 97 cycles/70 instructions = 1.39
