#/* $begin ncopy-ys */
##################################################################
# ncopy.ys - Copy a src block of len words to dst.
# Return the number of positive words (>0) contained in src.
#
# Include your name and ID here.
#
# Describe how and why you modified the baseline code.
#
##################################################################
# Do not modify this portion
# Function prologue.
# %rdi = src, %rsi = dst, %rdx = len
ncopy:

##################################################################
# You can modify this portion
	# Loop header
	xorq %rax,%rax		# count = 0;
	irmovq $1, %r8
	irmovq $2, %r12
	irmovq $8, %r9
	irmovq $0x10, %r13
	andq %rdx, %rdx
	jle Done
	rrmovq %rdx, %r14
	subq %r12, %r14
	jle Loop1
	
Loop2: 
	mrmovq (%rdi), %r10	# read val from src...
	mrmovq 8(%rdi), %r11	# read val from src...
	rmmovq %r10, (%rsi)	# ...and store it to dst
	rmmovq %r11, 8(%rsi)	# ...and store it to dst
	andq %r10, %r10		# val <= 0?
	jle Npos21		# if so, goto Npos:
	addq %r8, %rax		# count++
Npos21:	
	andq %r11, %r11		# val <= 0?
	jle Npos22		# if so, goto Npos:
	addq %r8, %rax		# count++
Npos22:
	subq %r12, %rdx
	addq %r13, %rdi
	addq %r13, %rsi
	rrmovq %rdx, %r10
	subq %r12, %r10
	jg Loop2

Loop1:	mrmovq (%rdi), %r10	# read val from src...
	rmmovq %r10, (%rsi)	# ...and store it to dst
	andq %r10, %r10		# val <= 0?
	jle Npos1		# if so, goto Npos:
	addq %r8, %rax		# count++
Npos1:	
	subq %r8, %rdx		# len--
	addq %r9, %rdi		# src++
	addq %r9, %rsi		# dst++
	andq %rdx,%rdx		# len > 0?
	jg Loop1			# if so, goto Loop:
##################################################################
# Do not modify the following section of code
# Function epilogue.
Done:
	ret
##################################################################
# Keep the following label at the end of your function
End:
#/* $end ncopy-ys */
