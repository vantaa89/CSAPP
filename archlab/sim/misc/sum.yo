0x000:                      | .pos 0
0x000: 30f40001000000000000 | irmovq stack, %rsp
0x00a: 801400000000000000   | call main
0x013: 00                   | halt
                            | 
0x014:                      | main:
0x014: 30f75800000000000000 |     irmovq ele1, %rdi
0x01e: 802800000000000000   |     call sum_list
0x027: 90                   |     ret
                            | 
0x028:                      | sum_list:       # rdi as an input, rax as an output
0x028: 6300                 |     xorq %rax, %rax
0x02a:                      | loop:
0x02a: 6277                 |     andq %rdi, %rdi
0x02c: 735400000000000000   |     je return
0x035: 50970000000000000000 |     mrmovq (%rdi), %r9
0x03f: 6090                 |     addq %r9, %rax
0x041: 50770800000000000000 |     mrmovq 8(%rdi), %rdi
0x04b: 702a00000000000000   |     jmp loop
0x054:                      | return:
0x054: 90                   |     ret
                            | 
                            | 
0x058:                      | .align 8
0x058:                      | ele1:
0x058: 0a00000000000000     |     .quad 0x00a
0x060: 6800000000000000     |     .quad ele2
0x068:                      | ele2:
0x068: b000000000000000     |     .quad 0x0b0
0x070: 7800000000000000     |     .quad ele3
0x078:                      | ele3:
0x078: 000c000000000000     |     .quad 0xc00
0x080: 0000000000000000     |     .quad 0
                            | 
0x100:                      | .pos 0x100
0x100:                      | stack:
